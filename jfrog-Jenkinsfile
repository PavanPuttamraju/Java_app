@Library('my-shared-library') _

pipeline{
    agent any
    parameters{
        choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')
        string(name: 'EC2IP', description: "give your EC2 instance public IP address", defaultValue: '3.83.41.17')
    }
    options{
        timeout(time: 2, unit: 'HOURS')
        disableConcurrentBuilds()
        timestamps()
    }
    stages{
        stage('Git Checkout'){
            when { expression {  params.action == 'create' } }
            steps{
            gitCheckout(
                branch: "main",
                url: "https://github.com/PavanPuttamraju/Java_app.git"
            )
            }
        }
        stage('Maven Build : maven'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                   mvnBuild()
               }
            }
        }
         stage('Image push to Jfrog  through Automation'){
         when { expression {  params.action == 'create' } }
            steps{
               script{
                    withCredentials([usernamePassword(credentialsId: 'jfrog-credentials', passwordVariable: 'password', usernameVariable: 'username')]) {
                    sh """
                    cd target
                    curl -X PUT -T kubernetes-configmap-reload-0.0.1-SNAPSHOT.jar http://${username}:${password}@"${params.EC2IP}":8082/artifactory/pavan-artifactory/
                   """
                }
            }
            }
        }   
    }
}
